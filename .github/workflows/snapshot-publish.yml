name: snapshot-publish

on:
  push:
    tags:
      - '*-SNAPSHOT'

jobs:
  run-build-on-ubuntu:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        name: checkout

      - name: Enable crossBuild
        run: docker run --privileged --rm tonistiigi/binfmt --install all && docker buildx create --use --name multi-arch-builder

      - name: Set up graalvm JDK 17
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'

      - name: Install cURL Headers
        run: sudo apt update && sudo apt install libcurl4-openssl-dev tree -y

      - name: graalvm native build
        run: |
          cd graalvm-build && ./gradlew nativeCompile --gc=G1 -Ob -march=native

      - name: release with Gradle
        shell: bash
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: | 
          ./gradlew -PdockerUserName="$DOCKER_USERNAME" -PdockerPassword="$DOCKER_PASSWORD" -Prelease="true" github

      - name: Run UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          files: |
            ./build/release1/*
          args: -q

      - uses: ncipollo/release-action@v1
        name: release files
        with:
          artifacts: "build/libs/*.jar,README.MD,build/release1/cf-ddns*"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true

  run-build-on-windows:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        name: checkout

      - name: Set up graalvm JDK 17
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'

      - name: graalvm native build
        run: |
          cd graalvm-build && ./gradlew nativeCompileAndCopy

      - name: Run UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          files: |
            ./build/release1/*
          args: -q

      - name: Print files
        run: |
          tree

      - uses: ncipollo/release-action@v1
        name: release files
        with:
          artifacts: "build/libs/*.jar,README.MD,build/release1/cf-ddns*"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
